Partie shell :

-Afficher une "simili" ligne relative à l'utilisateur et au fichier dans lequel il se trouve
-notamment à l'aide de la commande fflush(stdout) qui force l'affichage

Principe de saisie de commande :
-Saisie d'une commande par l'utilisateur
-Automate de découpage retournant un tableau de chaine de caratères (séparateur 'espace(s)')
-Vérification de l'existence de la commande (argv[0])
-Passage du reste du tableau dans une fonction de vérification :
    -Vérification existence des options/fichiers/...
        //Méthode du Switch --> apparemment marche pas
        executerCMD(char* argv[]){
            switch(argv[0]){
                case "ls" :
                    [...]
                    break;
                case "cd" :
                    [...]
                    break;
            }
        }
    //Seconde méthode de la struct
    -(deuxième solution de Nicolas : informations dans un struct ???)
-Renvoie une erreur si problème à tous les niveaux

-En dernier lieu, tenter de mettre en place la partie réseau du projet -> Création de socket client/serveur

-----------------------------------------------------------------

Partie librairie : 

-Aider au développement des l'automates à états finis
-Puis partir sur les commandes simples de base comme "ls"
-Définir une commande par defaut permettant de mettre fin au processus "eshelle"

-----------------------------------------------------------------

Interface (à rendre pour le 18/03/2016)


